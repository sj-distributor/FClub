# Stage 1: Build stage
FROM registry-vpc.cn-hongkong.aliyuncs.com/wiltechs/sdk:7.0 AS build-env

# Use root user for the build
USER root

# Set the working directory
WORKDIR /app

# Expose ports
EXPOSE 8080
EXPOSE 443

# Copy project files
COPY ./src/FClub.Api ./build/FClub.Api
COPY ./src/FClub.Core ./build/FClub.Core
COPY ./src/FClub.Messages ./build/FClub.Messages
COPY ./NuGet.Config ./build

# Restore dependencies and publish the project
RUN dotnet publish build/FClub.Api -c Release -o out

# Stage 2: Runtime stage
FROM registry-vpc.cn-hongkong.aliyuncs.com/wiltechs/aspnet:7.0

# Use root user for installing packages
USER root

# Install ffmpeg and openssl, then clean up temporary files
RUN apt-get update && apt-get install -y \
    bzip2 make gcc yasm libopencore-amrnb-dev libopencore-amrwb-dev wget && \
    wget https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 && \
    tar -jxvf ffmpeg-snapshot.tar.bz2 && \
    cd ffmpeg && \
    ./configure --enable-gpl --enable-libopencore-amrnb --enable-libopencore-amrwb --prefix=/usr/local/ffmpeg --enable-version3 && \
    make -j$(nproc) && make install && \
    ln -s /usr/local/ffmpeg/bin/ffmpeg /usr/local/bin/ && \
    cd .. && rm -rf ffmpeg ffmpeg-snapshot.tar.bz2 && \
    wget -O - https://www.openssl.org/source/openssl-1.1.1u.tar.gz | tar zxf - && \
    cd openssl-1.1.1u && \
    ./config --prefix=/usr/local && \
    make -j$(nproc) && \
    make install_sw install_ssldirs && \
    ldconfig -v && \
    cd .. && rm -rf openssl-1.1.1u && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Set environment variable for SSL certificate directory
ENV SSL_CERT_DIR=/etc/ssl/certs

# Set the working directory
WORKDIR /app

# Copy the published files from the build stage
COPY --from=build-env /app/out .

# Set the entry point
ENTRYPOINT ["dotnet", "FClub.Api.dll"]